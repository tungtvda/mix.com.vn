//================================================================================
// [pg-calender]
// version: 1.1.4
// update: 2016.10.06
//================================================================================

function DateManager(a) {
    this.year = parseInt(a.format("YYYY"), 10), this.month = parseInt(a.format("MM"), 10), this.prevMonth = parseInt(a.clone().add(-1, "months").format("MM"), 10), this.nextMonth = parseInt(a.clone().add(1, "months").format("MM"), 10), this.day = parseInt(a.format("DD"), 10), this.firstDay = 1, this.lastDay = parseInt(a.clone().endOf("month").format("DD"), 10), this.weekDay = a.weekday(), this.date = a
}
function Helper() {
}
var ComponentName = "pignoseCalender";
DateManager.prototype.toString = function () {
    return this.date.format("YYYY-MM-DD")
}, DateManager.Convert = function (a, b, c) {
    var d = Helper.Format("{0}-{1}-{2}", a, b, c);
    return moment(d, "YYYY-MM-DD")
}, Helper.Format = function (a) {
    if ("undefined" == typeof a || "" === a || arguments.length <= 1)return "";
    var b = Array.prototype.slice.call(arguments, 1);
    for (var c in b) {
        var d = b[c];
        a = a.replace(new RegExp("((?!\\\\)?\\{" + c + "(?!\\\\)?\\})", "g"), d)
    }
    return a
}, Helper.GetClass = function (a) {
    var b = a.split(""), c = "";
    for (var d in b) {
        var e = b[d];
        "string" == typeof e && (/[A-Z]/.test(e) === !0 && (c += "-", e = e.toString().toLowerCase()), c += e.toString())
    }
    return c
}, Helper.GetSubClass = function (a) {
    return Helper.GetClass(Helper.Format("{0}{1}", ComponentName, a))
}, "undefined" == typeof Array.prototype.filter && (Array.prototype.filter = function (a) {
    "use strict";
    if (null == this)throw new TypeError;
    var b = Object(this), c = b.length >>> 0;
    if ("function" != typeof a)return [];
    for (var d = [], e = arguments[1], f = 0; f < c; f++)if (f in b) {
        var g = b[f];
        a.call(e, g, f, b) && d.push(g)
    }
    return d
});
var ComponentClass = Helper.GetClass(ComponentName);
!function (a) {
    "use strict";
    var b = Helper.GetSubClass("Top"), c = Helper.GetSubClass("Header"), d = Helper.GetSubClass("Body"), e = {
        supports: ["en", "ko", "fr", "ch", "de", "jp"],
        weeks: {
            en: ["CN", "T2", "T3", "T4", "T5", "T6", "T7"],
            ko: ["일", "월", "화", "수", "목", "금", "토"],
            fr: ["Lun", "Mar", "Mer", "Jeu", "Ven", "Sam", "Dim"],
            ch: ["日", "月", "火", "水", "木", "金", "土"],
            de: ["Mon", "Die", "Mit", "Don", "Fre", "Sam", "Son"],
            jp: ["日", "月", "火", "水", "木", "金", "土"]
        },
        monthsLong: {
            en: ["January", "February", "March", "April", "May", "Jun", "July", "August", "September", "October", "November", "December"],
            ko: ["1월", "2월", "3월", "4월", "5월", "6월", "7월", "8월", "9월", "10월", "11월", "12월"],
            fr: ["Janvier", "Février", "Mars", "Avril", "Mai", "Juin", "Juillet", "Août", "Septembre", "Octobre", "Novembre", "Décembre"],
            ch: ["1月", "2月", "3月", "4月", "5月", "6月", "7月", "8月", "9月", "10月", "11月", "12月"],
            de: ["Jänner", "Feber", "März", "April", "Mai", "Juni", "Juli", "August", "September", "Oktober", "November", "Dezember"],
            jp: ["一月", "二月", "三月", "四月", "五月", "六月", "七月", "八月", "九月", "十月", "十一月", "十二月"]
        },
        months: {
            en: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
            ko: ["1월", "2월", "3월", "4월", "5월", "6월", "7월", "8월", "9월", "10월", "11월", "12월"],
            fr: ["Jan", "Fév", "Mar", "Avr", "Mai", "Juin", "Juil", "Aoû", "Sep", "Oct", "Nov", "Déc"],
            ch: ["1月", "2月", "3月", "4月", "5月", "6月", "7月", "8月", "9月", "10月", "11月", "12月"],
            de: ["Jän", "Feb", "Mär", "Apr", "Mai", "Jun", "Jul", "Aug", "Sep", "Okt", "Nov", "Dez"],
            jp: ["一月", "二月", "三月", "四月", "五月", "六月", "七月", "八月", "九月", "十月", "十一月", "十二月"]
        }
    };
    a.fn[ComponentName] = function (f) {
        var g = {
            init: function (f) {
                var g = this;
                this.settings = a.extend({
                    lang: "en",
                    date: moment(),
                    format: "YYYY-MM-DD",
                    weeks: e.weeks.en,
                    monthsLong: e.monthsLong.en,
                    months: e.months.en,
                    multiple: !1,
                    toggle: !1
                }, f), "en" !== this.settings.lang && !!a.inArray(this.settings.lang, e.supports) == !0 && (this.settings.weeks = e.weeks[this.settings.lang], this.settings.monthsLong = e.monthsLong[this.settings.lang], this.settings.months = e.months[this.settings.lang]), this.global = {calender: a(Helper.Format('<div class="{0}">\t\t\t\t\t\t\t\t\t\t\t\t<div class="{1}">\t\t\t\t\t\t\t\t\t\t\t\t\t<a href="#" class="{1}-nav {1}-prev">\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class="{1}-icon"></span>\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class="{1}-value"></span>\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\t\t\t\t\t\t\t\t\t\t\t\t\t<div class="{1}-date">\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p class="{1}-month"></p>\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h3 class="{1}-year"></h3>\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\t\t\t\t\t\t\t\t\t\t\t\t\t<a href="#" class="{1}-nav {1}-next">\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class="{1}-value"></span>\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class="{1}-icon"></span>\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\t\t\t\t\t\t\t\t\t\t\t\t</div>\t\t\t\t\t\t\t\t\t\t\t\t<div class="{2}"></div>\t\t\t\t\t\t\t\t\t\t\t\t<div class="{3}"></div>\t\t\t\t\t\t\t\t\t\t\t  </div>', ComponentClass, b, c, d))};
                for (var h in g.settings.weeks) {
                    var i = g.settings.weeks[h];
                    if ("string" == typeof i) {
                        i = i.toUpperCase();
                        var j = a(Helper.Format('<div class="{0} {0}-{2}">{1}</div>', Helper.GetSubClass("Week"), i, e.weeks.en[h].toLowerCase()));
                        j.appendTo(g.global.calender.find("." + c))
                    }
                }
                return this.each(function () {
                    var c = a(this), f = new DateManager(g.settings.date), h = {
                        current: [f.date, null],
                        storage: {activeDates: []},
                        dateManager: f
                    };
                    this.local = h;
                    var i = function () {
                        g.global.calender.appendTo(c.empty()), g.global.calender.find("." + b + "-year").text(f.year), g.global.calender.find("." + b + "-month").text(g.settings.monthsLong[f.month - 1]), g.global.calender.find(Helper.Format(".{0}-prev .{0}-value", b)).text(g.settings.months[f.prevMonth - 1].toUpperCase()), g.global.calender.find(Helper.Format(".{0}-next .{0}-value", b)).text(g.settings.months[f.nextMonth - 1].toUpperCase());
                        for (var j = g.global.calender.find("." + d).empty(), k = DateManager.Convert(f.year, f.month, f.firstDay), l = k.weekday(), m = a(), n = Helper.GetSubClass("UnitRange"), o = Helper.GetSubClass("UnitRangeFirst"), p = Helper.GetSubClass("UnitRangeLast"), q = Helper.GetSubClass("UnitActive"), r = [Helper.GetSubClass("UnitFirstActive"), Helper.GetSubClass("UnitSecondActive")], s = Helper.GetSubClass("UnitToggle"), t = 0; t < l; t++) {
                            var u = a(Helper.Format('<div class="{0} {0}-{1}"></div>', Helper.GetSubClass("Unit"), e.weeks.en[t].toLowerCase()));
                            m = m.add(u)
                        }
                        for (var t = f.firstDay; t <= f.lastDay; t++) {
                            var v = DateManager.Convert(f.year, f.month, t), u = a(Helper.Format('<div class="{0} {0}-date {0}-{3}" data-date="{1}"><a href="#">{2}</a></div>', Helper.GetSubClass("Unit"), v.format("YYYY-MM-DD"), t, e.weeks.en[v.weekday()].toLowerCase()));
                            g.settings.toggle === !1 ? (null !== h.current[0] && v.format("YYYY-MM-DD") === h.current[0].format("YYYY-MM-DD") && u.addClass(q).addClass(r[0]), null !== h.current[1] && v.format("YYYY-MM-DD") === h.current[1].format("YYYY-MM-DD") && u.addClass(q).addClass(r[1])) : !!a.inArray(v.format("YYYY-MM-DD"), h.storage.activeDates) == !0 && h.storage.activeDates.length > 0 && u.addClass(s), m = m.add(u), u.bind("click", function (b) {
                                b.preventDefault(), b.stopPropagation();
                                var c = a(this), d = 0;
                                if (g.settings.toggle === !0) {
                                    var e = c.data("date"), i = h.storage.activeDates.filter(function (a, b) {
                                        return a == e
                                    });
                                    if (h.current[d] = moment(e), i.length < 1)h.storage.activeDates.push(e), c.addClass(s); else {
                                        var j = 0;
                                        for (var k in h.storage.activeDates) {
                                            var l = h.storage.activeDates[k];
                                            if (e == l) {
                                                j = k;
                                                break
                                            }
                                        }
                                        h.storage.activeDates.splice(j, 1), c.removeClass(s)
                                    }
                                } else if (g.settings.multiple === !0 && g.global.calender.find("." + n).removeClass(n).removeClass(o).removeClass(p), c.hasClass(q))g.settings.multiple === !0 && (c.hasClass(r[0]) ? d = 0 : r[1] && (d = 1)), c.removeClass(q).removeClass(r[d]), h.current[d] = null; else {
                                    if (g.settings.multiple === !0 && (null === h.current[0] ? d = 0 : null === h.current[1] ? d = 1 : (d = 0, h.current[1] = null, g.global.calender.find("." + q + "." + r[1]).removeClass(q).removeClass(r[1]))), g.global.calender.find("." + q + "." + r[d]).removeClass(q).removeClass(r[d]), c.addClass(q).addClass(r[d]), h.current[d] = moment(c.data("date")), 1 == d && h.current[0].diff(h.current[1]) > 0) {
                                        var m = h.current[0];
                                        h.current[0] = h.current[1], h.current[1] = m, m = null, g.global.calender.find("." + q).each(function () {
                                            for (var b in r) {
                                                var c = r[b];
                                                a(this).toggleClass(c)
                                            }
                                        })
                                    }
                                    if (null !== h.current[0] && null !== h.current[1])for (var t = parseInt(h.current[0].format("DD"), 10), u = parseInt(h.current[1].format("DD"), 10), v = t + 1; v < u; v++) {
                                        var e = DateManager.Convert(f.year, f.month, v).format("YYYY-MM-DD"), w = g.global.calender.find(Helper.Format('.{0}[data-date="{1}"]', Helper.GetSubClass("Unit"), e)).addClass(n);
                                        v === t + 1 && w.addClass(o), v === u - 1 && w.addClass(p)
                                    }
                                }
                                "function" == typeof g.settings.select && (a.extend(h.storage, g.global), g.settings.select.call(c, h.current, h.storage))
                            })
                        }
                        for (var w = DateManager.Convert(f.year, f.month, f.lastDay), x = w.weekday(), t = x + 1; m.length <= 35; t++) {
                            var u = a(Helper.Format('<div class="{0} {0}-{1}"></div>', Helper.GetSubClass("Unit"), e.weeks.en[t % 7].toLowerCase()));
                            m = m.add(u)
                        }
                        var y = null;
                        m.each(function (b, c) {
                            (b % 7 == 0 || b + 1 >= m.length) && (null != y && y.appendTo(j), b + 1 < m.length && (y = a(Helper.Format('<div class="{0}"></div>', Helper.GetSubClass("Row"))))), y.append(a(this))
                        }), g.global.calender.find("." + b + "-nav").bind("click", function (c) {
                            c.preventDefault(), c.stopPropagation();
                            var d = a(this);
                            d.hasClass(b + "-prev") ? (f = new DateManager(f.date.add(-1, "months")), i()) : d.hasClass(b + "-next") && (f = new DateManager(f.date.add(1, "months")), i())
                        })
                    };
                    i()
                })
            }, select: function (b) {
                this.each(function () {
                    var c = this.local, d = c.dateManager, e = Helper.Format("{0}-{1}-{2}", d.year, d.month, b);
                    a(this).find(Helper.Format('.{0}[data-date="{1}"]', Helper.GetSubClass("Unit"), e)).triggerHandler("click")
                })
            }
        };
        return g[f] ? g[f].apply(this, Array.prototype.slice.call(arguments, 1)) : "object" != typeof f && f ? void console.error("Argument error are occured.") : g.init.apply(this, arguments)
    }
}(jQuery);